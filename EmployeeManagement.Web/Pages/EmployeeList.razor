@page "/"
@using EmployeeManagement.Models
@inherits EmployeeListBase

@*@attribute [Authorize]*@
<h3>Employee List</h3>
<style>
    .thead-light span {
        cursor: pointer;
    }

    .thead-light i {
        color: darkblue;
        padding: 5px;
    }
</style>
<SfCalendar TValue="DateTime?" ></SfCalendar>
@if (Employees == null)
{
    <div class="spinner"></div>
}

else
{
    <EditForm Model="@employeeSearch" OnSubmit="@Search">
        <div class="form-group row">
            <label for="gender2" class="col-sm-2 col-form-label">
                Gender
            </label>
            <div class="col-sm-4">
                <InputSelect id="gender" @bind-Value="@employeeSearch.Gender" class="form-control">

                    <option value="-1">select...</option>
                    @foreach (var gender in Enum.GetValues(typeof(Gender)))
                        {
                        <option value="@gender">@gender</option>
                        }
                </InputSelect>
            </div>

            <label for="Department" class="col-sm-2 col-form-label">
                Department
            </label>
            <div class="col-sm-4">
                @if (Departments != null)
                {
                    <InputSelect id="department" @bind-Value="@employeeSearch.DepartmentId" class="form-control">
                        <option value="-1">select...</option>
                        @foreach (var dept in Departments)
                                {
                            <option value="@dept.DepartmentId">@dept.DepartmentName</option>
                                }
                    </InputSelect>
                }
            </div>
        </div>
        <div class="form-group row">
            <label for="Name" class="col-sm-2 col-form-label">
                Name
            </label>
            <div class="col-sm-4">
                <InputText id="firstName" class="form-control" placeholder="enter Name"
                           @bind-Value="employeeSearch.Name" />
            </div>
            <label for="Email" class="col-sm-2 col-form-label">
                Email
            </label>
            <div class="col-sm-4">
                <InputText id="firstName" class="form-control" placeholder="enter Email"
                           @bind-Value="employeeSearch.Email" />
            </div>

        </div>

        <div class="float-right">
            <button class="btn btn-primary" type="submit">Filter</button>
            <button class="btn btn-secondary" @onclick="@ResetSearch" type="reset">reset</button>

        </div>
        <hr />
    </EditForm>

    <Syncfusion.Blazor.Grids.SfGrid DataSource="SearchedEmployees"></Syncfusion.Blazor.Grids.SfGrid>
    <input type="button" class="btn btn-success" @onclick="GenerateReport" value="Generate Report" />
    <input type="checkbox" @bind="ShowFooter" id="showFooter" />
    <label for="">Show Footer</label>
    <span>@SelectedEmployeesCount</span>
    <table class="table">
        <thead class="thead-light">
            <tr>
                <th>
                    <span @onclick="@(() => Sort("FirstName"))">Name</span>
                    <i class="@(SortIndicator("FirstName"))"></i>
                </th>
                <th>
                    <span @onclick="@(() => Sort("Email"))">Email</span>
                    <i class="@(SortIndicator("Email"))"></i>
                </th>
                <th>
                    <span>Department</span>
                </th>
                <th>
                    <span @onclick="@(() => Sort("dateOfBrith"))">Date Of Birth</span>
                    <i class="@(SortIndicator("dateOfBrith"))"></i>
                </th>
                <th>Actions</th>
                @*<th>Name</th>
                    <th>Email</th>
                    <th>Date Of Birth</th>*@
            </tr>
        </thead>

        @foreach (var employee in SearchedEmployees)
        {
            if (FilterdDepartment != null) { employee.Department = FilterdDepartment; }
            <DisplayEmployee Employee="employee" ShowFooter="ShowFooter" OnEmployeeSelection="EmployeeSelectionChanged" onEmployeeDeleted="EmployeeDeleted"></DisplayEmployee>

        }
        @if (SearchedEmployees.Count() > 0)
        {

            <Pager PageIndex=@paginatedList.PageNumber TotalPages=@paginatedList.TotalPages OnClick="PageIndexChanged"
                   HasNextPage=@paginatedList.HasNextPage HasPreviousPage=@paginatedList.HasPreviousPage>
            </Pager>
        }
        @if (SearchedEmployees.Count() == 0)
        {
            <tr class="d-flex justify-content-center">
                <td colspan="5">

                    there is no data to be displayed
                </td>
            </tr>

        }
    </table>

}
